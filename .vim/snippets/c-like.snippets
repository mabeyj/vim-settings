# Shared snippets for all C-like languages
extends brackets

# Comments
snippet d "Doc comment" bf
/**
 * $1
 */
endsnippet

snippet "* s" "@see documentation" b
* @see ${1:element/function()/$variable}
endsnippet

snippet "* si" "@since documentation" b
* @since ${1:version}
endsnippet

# Operators
snippet 3 "Ternary operator" i
${1:/* condition */} ? ${2:/* if true*/} : ${3:/* if false */}
endsnippet

snippet 33 "Multi-line ternary operator" i
${1:/* condition */}
	? ${2:/* if true */}
	: ${3:/* if false */}
endsnippet

# Functions
snippet afn "Anonymous function declaration" w
function($1)
{
	$2
}
endsnippet

# Control flow
snippet b "Break" b
break;
endsnippet

snippet co "Continue" b
continue;
endsnippet

snippet r "Return" b
return $1;
endsnippet

# If-else blocks
snippet i "If block" b
if (${1:/* condition */})
{
	$2
}
endsnippet

snippet I "Single-line if block" b
if (${1:/* condition */})
	$2
endsnippet

snippet e "Else block" b
else
{
	$1
}
endsnippet

snippet E "Single-line else block" b
else
	$1
endsnippet

# Loops
snippet do "Do-while loop" b
do
{
	$2
} while (${1:/* condition */});
endsnippet

snippet w "While loop" b
while (${1:/* condition */})
{
	$2
}
endsnippet
