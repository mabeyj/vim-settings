# PHP tags
snippet ?
	<?php
	${1}
snippet ??
	<?php
	${1}
	?>
snippet i?
	<?php ${1} ?>
# Value keywords
snippet F
	FALSE
snippet T
	TRUE
snippet N
	NULL
# Brackets/braces
snippet ss
	[${1}]
snippet ssj
	[${1}];
snippet dd
	{${1}}
snippet ff
	{
		${1}	
	}
snippet kk
	(${1})
snippet kkf
	(${1});
snippet jj
	(
		${1}
	)
snippet jjf
	(
		${1}
	);
# Comments
snippet d
	/**
	 * ${1}
	 */
snippet dp
	@param ${1:type} $${2:name}  ${3}
snippet dr
	@return ${1:type}  ${2}
snippet dv
	@var ${1:type}  ${2}
snippet ds
	@see ${1:element}
snippet dsi
	@since ${1:version}
snippet dt
	@throws ${1:type}  ${2:description}
snippet du
	@uses ${1:element}  ${2}
# Output
snippet ec
	echo ${1};
snippet v
	var_dump(${1});
snippet iec
	<?php echo ${1}; ?>
# Operators
snippet 3
	${1:/* condition */} ? ${2:/* if true */} : ${3:/* if false */}
snippet 33
	${1:/* condition */}
		? ${2:/* if true */}
		: ${3:/* if false */}
# Arrays
snippet a
	array(${1})${2}
snippet aj
	array(${1});
snippet aa
	array( 
		${1}
	)
snippet aaj
	array(
		${1}
	);
snippet k
	'${1:key}' => ${2},${3}
# Superglobals
snippet G
	$_GET
snippet P
	$_POST
# Classes
snippet c
	class ${1:ClassName} {

		${2}

	}
snippet c1
	class ${1:ClassName} {}
snippet cx
	class ${1:ClassName} extends ${2:ParentClass} {

		${3}

	}
snippet cx1
	class ${1:ClassName} extends ${2:ParentClass} {}
snippet p
	public ${1}
snippet pr
	protected ${1}
snippet pv
	private ${1}
snippet st
	static ${1}
snippet pa
	parent::
# Functions
snippet fn
	function ${1:function_name}(${2})
	{
		${3}
	}
snippet afn
	function(${1})
	{
		${2}
	}
# Control flow
snippet b
	break;
snippet co
	continue;
snippet r
	return ${1};
# If-else blocks
snippet i
	if (${1:/* condition */})
	{
		${2}
	}
snippet i1
	if (${1:/* condition */})
		${2}
snippet ei
	elseif (${1:/* condition */})
	{
		${2}
	}
snippet ei1
	elseif (${1:/* condition */})
		${2}
snippet e
	else
	{
		${1}
	}
snippet e1
	else
		${1}
snippet ii
	<?php if (${1:/* condition */}): ?>
		${2}
	<?php endif; ?>
snippet iei
	<?php elseif (${1:/* condition */}): ?>
		${2}
snippet ie
	<?php else: ?>
		${1}
# Switch blocks
snippet s
	switch ($${1:variable})
	{
		default:
			${2}
		break;
	}
snippet ca
	case ${1}:
		${2}
	break;
# Loops
snippet f
	for ($${1:i} = ${2:0}; ${3:/* condition */}; $$1++)
	{
		${4}
	}
snippet fe
	foreach ($${1:array} as $${2:value})
	{
		${3}
	}
snippet fk
	foreach ($${1:array} as $${2:key} => $${3:value})
	{
		${4}
	}
snippet do
	do
	{
		${2}
	} while (${1:/* condition */});
snippet w
	while (${1:/* condition */})
	{
		${2}
	}
snippet ife
	<?php foreach ($${1:array} as $${2:value}): ?>
		${3}
	<?php endforeach; ?>
# Exceptions
snippet t
	throw new ${1:ExceptionType}(${2});
snippet tc
	try
	{
		${2}
	}
	catch (${1:ExceptionType} $exception)
	{

	}
snippet ct
	catch (${1:ExceptionType} $exception)
	{
		${2}
	}
# Kohana snippets
snippet k?
	<?php defined('SYSPATH') or die('No direct script access.');
snippet kt?
	<?php defined('SYSPATH') or die('Kohana bootstrap needs to be included before tests run');
snippet ki
	__('${1}')
snippet kfo
	<?php echo Form::open($${1:uri}); ?>
snippet kfc
	<?php echo Form::close(); ?>
snippet kfl
	Form::label(NULL, __('${1}').${2})
snippet kfi
	Form::input('${1:name}')
snippet kfb
	Form::button('${1:name}', __('${2:label}'))
# Velsoft snippets
snippet vd
	/**
	 * ${3}
	 *
	 * @package   ${1}
	 * @category  ${2}
	 * @author    Velsoft Training Materials, Inc.
	 */
